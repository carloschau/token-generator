# This is a basic workflow to help you get started with Actions

name: Docker Image Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push-image:
    runs-on: ubuntu-20.04
    env:
      CONTAINER_REPO_USERNAME: ${{ secrets.CONTAINER_REPO_USERNAME }}
      CONTAINER_REPO_PASSWORD: ${{ secrets.CONTAINER_REPO_PASSWORD }}
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: cluster-1
      GKE_ZONE: us-central1-c
      DEPLOYMENT_NAME: token-generator-deployment
    steps:
      - uses: actions/checkout@v2

      - name: Build and publish image
        run: |
          chmod +x ./gradlew
          ./gradlew dockerPushImage

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Deploy
        run: |
          kubectl create secret docker-registry dockerhub --docker-server=docker.io --docker-username=$CONTAINER_REPO_USERNAME --docker-password=$CONTAINER_REPO_PASSWORD --docker-email=carlos.chau719@gmail.com
          kubectl apply -f manifests/k8s/deployment.yaml -f manifests/k8s/service.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide