# This is a basic workflow to help you get started with Actions

name: GCloud Deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push-image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/push-image

  gcloud-deploy:
    runs-on: ubuntu-20.04
    env:
      CONTAINER_REPO_USERNAME: ${{ secrets.CONTAINER_REPO_USERNAME }}
      CONTAINER_REPO_PASSWORD: ${{ secrets.CONTAINER_REPO_PASSWORD }}
      PROJECT_ID: ${{ secrets.GKE_PROJECT }}
      GKE_CLUSTER: cluster-1
      GKE_ZONE: us-central1-c
      DEPLOYMENT_NAME: token-generator-deployment
    steps:
      - uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy
        run: |
          cd manifests/k8s
          ./../../kustomize edit set image carloschau/token-generator:TAG=carloschau/token-generator:$GITHUB_SHA
          ./../../kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide